pipeline {
    agent any
        environment{
            NEW_VERSION = '1.3.0'
            SERVER_CREDENTIALS = credentials('server-cred')
            CRX_DEPLOY_CREDENTIAL_ID = 'aem-author'
            CRX_DEPLOY_AUTHOR_URL ="http://localhost:4502"
           // def tomcatBin = 'E:\\apache-tomcat-9.0.53\\apache-tomcat-9.0.53\\bin'
        }
        tools {
            maven 'apache-maven-3.8.2'
        }
    stages {
        stage('Build') {
            steps {
                echo 'Building WKND..'
                bat 'java -version'
                echo "Build Version is ${NEW_VERSION}"
                bat "mvn clean install"
            }
        }
        stage('Scan') {
          steps {
              echo 'Scanning the code..'
            withSonarQubeEnv(installationName: 'sq1') { 
              //bat './mvnw clean org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.0.2155:sonar'
               bat 'mvn clean install org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.0.2155:sonar'
                echo 'Scanning the code..'
            } 
            sleep(time:10,unit:"SECONDS")
          }
        }
        stage('Test' ) {
            steps {
                echo 'Testing..'
            }
        }
        stage('Deploy') {
          /*  when {
              expression {
                currentBuild.result == null || currentBuild.result == 'SUCCESS' 
              }
            } */
           
            steps {
                echo "Deploying....${currentBuild.result}"
                crxDeploy baseUrls: CRX_DEPLOY_AUTHOR_URL,
                credentialsId: CRX_DEPLOY_CREDENTIAL_ID,
                behavior: 'Overwrite',
                packageIdFilters: 'ui.apps/target/aem-guides-wknd.ui.apps-*.zip',
                recursive: true
                //disableForJobTesting: true
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    sh "exit 1"
                    }
             } 
        }
    }
}
